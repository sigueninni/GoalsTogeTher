{"ast":null,"code":"var _jsxFileName = \"/home/saadi/coursAlyra/OpiChain/client/src/pages/SurveyList.jsx\",\n  _s = $RefreshSig$();\nimport '../css/page/userList.css';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { DeleteOutline } from '@mui/icons-material';\n//import { userRows } from \"../dummyData\";\nimport useEth from \"../contexts/EthContext/useEth\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport SendIcon from '@mui/icons-material/Send';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SurveyList() {\n  _s();\n  let surveysDataLcl = [];\n  let surveysDataLclExt = [];\n  const [surveysData, setSurveysData] = useState([]);\n  const [surveysDesc, setSurveysDesc] = useState([]);\n  const {\n    state: {\n      accounts,\n      contractOpiChainSurveyNFT\n    }\n  } = useEth();\n  useEffect(() => {\n    if (contractOpiChainSurveyNFT && contractOpiChainSurveyNFT !== null && contractOpiChainSurveyNFT !== void 0 && contractOpiChainSurveyNFT.methods) {\n      (async function () {\n        let oldEvents = await contractOpiChainSurveyNFT.getPastEvents('surveyCreated', {\n          fromBlock: 0,\n          toBlock: 'latest'\n        });\n        oldEvents.forEach(event => {\n          debugger;\n          surveysDataLcl.push({\n            '_idSurvey': event.returnValues._idSurvey,\n            '_ownerSurvey': event.returnValues._ownerSurvey\n          });\n        });\n        for (let [index, s] of surveysDataLcl.entries()) {\n          let survey = await contractOpiChainSurveyNFT.methods.getSurveyById(s._idSurvey).call({\n            from: accounts[0]\n          });\n          s = {\n            ...s,\n            ...survey\n          };\n          surveysDataLclExt.push(s);\n          console.log(s);\n        }\n        setSurveysData(surveysDataLclExt);\n      })();\n    }\n  }, [contractOpiChainSurveyNFT, accounts]);\n  const getStatusById = status => {\n    return status === \"0\" ? 'Ongoing' : 'Terminated';\n  };\n  const getSurveyDetails = async () => {\n    let surveysDescLcl = [];\n    for (let i = 0; i < surveysData.length; i++) {\n      let survey = await contractOpiChainSurveyNFT.methods.getSurveyById(surveysData[i]._idSurvey).call({\n        from: accounts[0]\n      });\n    }\n    setSurveysDesc(surveysDescLcl);\n    console.log(surveysDesc);\n  };\n  const handleDelete = id => {\n    setSurveysData(surveysData.filter(item => item.idSurvey !== id));\n  };\n  const columns = [{\n    field: \"idSurvey\",\n    headerName: \"Survey Id\",\n    width: 90\n  }, {\n    field: \"Survey\",\n    headerName: \"Description\",\n    width: 100,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userListUser\",\n        children: [!params.row.minted && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"userListImg\",\n          src: \"https://images.unsplash.com/photo-1518546305927-5a555bb7020d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 49\n        }, this), params.row.minted && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"userListImg\",\n          src: \"https://gateway.pinata.cloud/ipfs/QmQArfD1KvAi1tBqNsuurMFKJux7N1RU62iisFEdvE6iAM/\" + (params.row.idSurvey++).toString() + \".png\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 48\n        }, this), params.row.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this);\n    }\n  }, {\n    field: \"surveyStatus\",\n    headerName: \"Status\",\n    width: 100,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userListUser\",\n        children: getStatusById(params.row.surveyStatus)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this);\n    }\n  }, {\n    field: \"nb\",\n    headerName: \"Number of questions\",\n    width: 90,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userListUser\",\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this);\n    }\n  },\n  /*         {\n              field: \"gender\",\n              headerName: \"Gender\",\n              width: 100,\n              renderCell: (params) => {\n                  return (\n                      <div className=\"userListUser\">\n                          {getGenderById(params.row.gender)}\n                      </div>\n                  );\n              },\n          },\n          { field: \"age\", headerName: \"Age\", width: 90 },\n          { field: \"balance\", headerName: \"Balance\", width: 90 },\n          { field: \"location\", headerName: \"Location\", width: 90 },\n          { field: \"isOpiIdGranted\", headerName: \"Opi Id Granted\", width: 90 }, */\n  {\n    field: \"action\",\n    headerName: \"Action\",\n    width: 450,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"userListEdit\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"userListEdit\",\n          children: \"Terminate survey\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"userListEdit\",\n          children: \"Stack survey\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"userListEdit\",\n          children: \"List survey on Marketplace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(DeleteOutline, {\n          className: \"userListDelete\",\n          onClick: () => handleDelete(params.row.OpiIdCounter)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userList\",\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: surveysData,\n      disableSelectionOnClick: true,\n      columns: columns,\n      pageSize: 8,\n      checkboxSelection: true,\n      getRowId: row => row.idSurvey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n}\n_s(SurveyList, \"KzSJ/CAfwst4X+duzTWtRHkxTBg=\", false, function () {\n  return [useEth];\n});\n_c = SurveyList;\nexport default SurveyList;\nvar _c;\n$RefreshReg$(_c, \"SurveyList\");","map":{"version":3,"names":["DataGrid","DeleteOutline","useEth","useState","useEffect","Link","Button","DeleteIcon","SendIcon","SurveyList","surveysDataLcl","surveysDataLclExt","surveysData","setSurveysData","surveysDesc","setSurveysDesc","state","accounts","contractOpiChainSurveyNFT","methods","oldEvents","getPastEvents","fromBlock","toBlock","forEach","event","push","returnValues","_idSurvey","_ownerSurvey","index","s","entries","survey","getSurveyById","call","from","console","log","getStatusById","status","getSurveyDetails","surveysDescLcl","i","length","handleDelete","id","filter","item","idSurvey","columns","field","headerName","width","renderCell","params","row","minted","toString","description","surveyStatus","OpiIdCounter"],"sources":["/home/saadi/coursAlyra/OpiChain/client/src/pages/SurveyList.jsx"],"sourcesContent":["\nimport '../css/page/userList.css'\nimport { DataGrid } from '@mui/x-data-grid';\nimport { DeleteOutline } from '@mui/icons-material';\n//import { userRows } from \"../dummyData\";\nimport useEth from \"../contexts/EthContext/useEth\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport SendIcon from '@mui/icons-material/Send';\n\nfunction SurveyList() {\n\n\n    let surveysDataLcl = [];\n    let surveysDataLclExt = [];\n    const [surveysData, setSurveysData] = useState([]);\n    const [surveysDesc, setSurveysDesc] = useState([]);\n    const { state: { accounts, contractOpiChainSurveyNFT } } = useEth();\n\n\n    useEffect(() => {\n\n        if (contractOpiChainSurveyNFT && contractOpiChainSurveyNFT?.methods) {\n          (async function () {\n    \n            let oldEvents = await contractOpiChainSurveyNFT.getPastEvents('surveyCreated', {\n              fromBlock: 0,\n              toBlock: 'latest'\n            });\n    \n            oldEvents.forEach(event => {\n              debugger;\n              surveysDataLcl.push({\n                '_idSurvey': event.returnValues._idSurvey,\n                '_ownerSurvey': event.returnValues._ownerSurvey,\n              });\n    \n            });\n    \n    \n    \n            for (let [index, s] of surveysDataLcl.entries()) {\n              let survey = await contractOpiChainSurveyNFT.methods.getSurveyById(s._idSurvey).call({ from: accounts[0] });\n              s = { ...s, ...survey };\n              surveysDataLclExt.push(s);\n              console.log(s);\n            }\n            setSurveysData(surveysDataLclExt);\n          })();\n        }\n    \n      }, [contractOpiChainSurveyNFT, accounts]);\n    \n    \n      const getStatusById = (status) => {\n        return (status === \"0\" ? 'Ongoing' : 'Terminated');\n      };\n    \n      const getSurveyDetails = async () => {\n        let surveysDescLcl = [];\n        for (let i = 0; i < surveysData.length; i++) {\n          let survey = await contractOpiChainSurveyNFT.methods.getSurveyById(surveysData[i]._idSurvey).call({ from: accounts[0] });\n        }\n        setSurveysDesc(surveysDescLcl);\n        console.log(surveysDesc);\n    \n      }\n\n\n    const handleDelete = (id) => {\n        setSurveysData(surveysData.filter((item) => item.idSurvey !== id));\n    };\n\n    const columns = [\n        { field: \"idSurvey\", headerName: \"Survey Id\", width: 90 },\n        {\n            field: \"Survey\",\n            headerName: \"Description\",\n            width: 100,\n            renderCell: (params) => {\n                return (\n                    <div className=\"userListUser\">\n                       { !params.row.minted  && <img className=\"userListImg\" src=\"https://images.unsplash.com/photo-1518546305927-5a555bb7020d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8\" alt=\"\" />} \n                       { params.row.minted  && <img className=\"userListImg\" src={\"https://gateway.pinata.cloud/ipfs/QmQArfD1KvAi1tBqNsuurMFKJux7N1RU62iisFEdvE6iAM/\" + (params.row.idSurvey++).toString() + \".png\"} alt=\"\" />} \n                        {params.row.description}\n                    </div>\n                );\n            },\n        },\n        {\n            field: \"surveyStatus\",\n            headerName: \"Status\",\n            width: 100,\n            renderCell: (params) => {\n                return (\n                    <div className=\"userListUser\">\n                        {getStatusById(params.row.surveyStatus)}\n                    </div>\n                );\n            },\n        },\n        { field: \"nb\", headerName: \"Number of questions\", width: 90 ,\n        renderCell: (params) => {\n            return (\n                <div className=\"userListUser\">\n                    1\n                </div>\n            );\n        },},\n/*         {\n            field: \"gender\",\n            headerName: \"Gender\",\n            width: 100,\n            renderCell: (params) => {\n                return (\n                    <div className=\"userListUser\">\n                        {getGenderById(params.row.gender)}\n                    </div>\n                );\n            },\n        },\n        { field: \"age\", headerName: \"Age\", width: 90 },\n        { field: \"balance\", headerName: \"Balance\", width: 90 },\n        { field: \"location\", headerName: \"Location\", width: 90 },\n        { field: \"isOpiIdGranted\", headerName: \"Opi Id Granted\", width: 90 }, */\n        {\n            field: \"action\",\n            headerName: \"Action\",\n            width: 450,\n            renderCell: (params) => {\n                return (\n                    <>\n                        \n                        <button className=\"userListEdit\">Edit</button>\n                        <button className=\"userListEdit\">Terminate survey</button>\n                        <button className=\"userListEdit\">Stack survey</button>\n                        <button className=\"userListEdit\">List survey on Marketplace</button>  \n                        \n                        <DeleteOutline\n                            className=\"userListDelete\"\n                            onClick={() => handleDelete(params.row.OpiIdCounter)}\n                        />\n                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n\n        <div className=\"userList\">\n        {/*     <div className=\"userListTitleContainer\">\n                <h1 className=\"userListTitle\">Create a new OPI member</h1>\n                <Link to=\"/newUser\">\n                    <button className=\"userListAddButton\">Create</button>\n                </Link>\n            </div> */}\n            <DataGrid\n                rows={surveysData}\n                disableSelectionOnClick\n                columns={columns}\n                pageSize={8}\n                checkboxSelection\n                getRowId={(row) => row.idSurvey}\n            />\n        </div>\n    );\n}\n\nexport default SurveyList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}