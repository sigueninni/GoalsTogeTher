{"ast":null,"code":"var _jsxFileName = \"/home/saadi/coursAlyra/OpiChain/client/src/pages/MarketPlace.jsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport '../css/page/marketPlace.css';\nimport useEth from \"../contexts/EthContext/useEth\";\nimport { useState, useEffect } from \"react\";\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport ImageListItemBar from '@mui/material/ImageListItemBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MarketPlace() {\n  _s();\n  const [refresh, setRefresh] = useState(false);\n  const {\n    state: {\n      accounts,\n      contractOpiChainSurveyNFT,\n      contractMarketPlace\n    }\n  } = useEth();\n  const [listed, setListed] = useState([]);\n  const [surveysData, setSurveysData] = useState([]);\n  useEffect(() => {\n    if (contractMarketPlace && contractMarketPlace !== null && contractMarketPlace !== void 0 && contractMarketPlace.methods) {\n      (async function () {\n        let listedSurvey = await contractMarketPlace.methods.getListedSurveysNfts().call({\n          from: accounts[0]\n        });\n        let surveysDataLclExt = [];\n        for (let [index, s] of listedSurvey.entries()) {\n          let survey = await contractOpiChainSurveyNFT.methods.getSurveyById(s.id).call({\n            from: accounts[0]\n          });\n          s = {\n            ...s,\n            ...survey\n          };\n          surveysDataLclExt.push(s);\n          console.log(s);\n        }\n        setSurveysData(surveysDataLclExt);\n        //  setSurveysData(surveysDataLclExt);\n      })();\n    }\n  }, [contractMarketPlace, accounts, refresh]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"marketPlace\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(MarketPlace, \"wkqiLDv/IhpshWiUWLsSjUKM7ws=\", false, function () {\n  return [useEth];\n});\n_c = MarketPlace;\nexport default MarketPlace;\nvar _c;\n$RefreshReg$(_c, \"MarketPlace\");","map":{"version":3,"names":["React","useEth","useState","useEffect","ImageList","ImageListItem","ImageListItemBar","MarketPlace","refresh","setRefresh","state","accounts","contractOpiChainSurveyNFT","contractMarketPlace","listed","setListed","surveysData","setSurveysData","methods","listedSurvey","getListedSurveysNfts","call","from","surveysDataLclExt","index","s","entries","survey","getSurveyById","id","push","console","log"],"sources":["/home/saadi/coursAlyra/OpiChain/client/src/pages/MarketPlace.jsx"],"sourcesContent":["import * as React from 'react';\nimport '../css/page/marketPlace.css';\nimport useEth from \"../contexts/EthContext/useEth\";\nimport { useState, useEffect } from \"react\";\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport ImageListItemBar from '@mui/material/ImageListItemBar';\n\n\nfunction MarketPlace() {\n\n   const [refresh, setRefresh] = useState(false);\n    const { state: {  accounts, contractOpiChainSurveyNFT , contractMarketPlace } } = useEth();\n    const [listed, setListed] = useState([]);\n    const [surveysData, setSurveysData] = useState([]);\n    \n    \n    useEffect(() => {\n\n        if (contractMarketPlace && contractMarketPlace?.methods) {\n            (async function () {\n\n              \n            let listedSurvey = await contractMarketPlace.methods.getListedSurveysNfts().call({ from: accounts[0] });\n            let surveysDataLclExt = [];\n\n            for (let [index, s] of listedSurvey.entries()) {\n                let survey = await contractOpiChainSurveyNFT.methods.getSurveyById(s.id).call({ from: accounts[0] });\n                s = { ...s, ...survey };\n                surveysDataLclExt.push(s);\n                console.log(s);\n            }\n            setSurveysData(surveysDataLclExt);\n              //  setSurveysData(surveysDataLclExt);\n            })();\n        }\n\n    }, [contractMarketPlace, accounts, refresh]);\n\n    return (\n        \n        <div className=\"marketPlace\">\n  \n        </div>\n    );\n}\n\nexport default MarketPlace;"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAO,6BAA6B;AACpC,OAAOC,MAAM,MAAM,+BAA+B;AAClD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,gBAAgB,MAAM,gCAAgC;AAAC;AAG9D,SAASC,WAAW,GAAG;EAAA;EAEpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC5C,MAAM;IAAEQ,KAAK,EAAE;MAAGC,QAAQ;MAAEC,yBAAyB;MAAGC;IAAoB;EAAE,CAAC,GAAGZ,MAAM,EAAE;EAC1F,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAGlDC,SAAS,CAAC,MAAM;IAEZ,IAAIU,mBAAmB,IAAIA,mBAAmB,aAAnBA,mBAAmB,eAAnBA,mBAAmB,CAAEK,OAAO,EAAE;MACrD,CAAC,kBAAkB;QAGnB,IAAIC,YAAY,GAAG,MAAMN,mBAAmB,CAACK,OAAO,CAACE,oBAAoB,EAAE,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAEX,QAAQ,CAAC,CAAC;QAAE,CAAC,CAAC;QACvG,IAAIY,iBAAiB,GAAG,EAAE;QAE1B,KAAK,IAAI,CAACC,KAAK,EAAEC,CAAC,CAAC,IAAIN,YAAY,CAACO,OAAO,EAAE,EAAE;UAC3C,IAAIC,MAAM,GAAG,MAAMf,yBAAyB,CAACM,OAAO,CAACU,aAAa,CAACH,CAAC,CAACI,EAAE,CAAC,CAACR,IAAI,CAAC;YAAEC,IAAI,EAAEX,QAAQ,CAAC,CAAC;UAAE,CAAC,CAAC;UACpGc,CAAC,GAAG;YAAE,GAAGA,CAAC;YAAE,GAAGE;UAAO,CAAC;UACvBJ,iBAAiB,CAACO,IAAI,CAACL,CAAC,CAAC;UACzBM,OAAO,CAACC,GAAG,CAACP,CAAC,CAAC;QAClB;QACAR,cAAc,CAACM,iBAAiB,CAAC;QAC/B;MACF,CAAC,GAAG;IACR;EAEJ,CAAC,EAAE,CAACV,mBAAmB,EAAEF,QAAQ,EAAEH,OAAO,CAAC,CAAC;EAE5C,oBAEI;IAAK,SAAS,EAAC;EAAa;IAAA;IAAA;IAAA;EAAA,QAEtB;AAEd;AAAC,GApCQD,WAAW;EAAA,QAGkEN,MAAM;AAAA;AAAA,KAHnFM,WAAW;AAsCpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}