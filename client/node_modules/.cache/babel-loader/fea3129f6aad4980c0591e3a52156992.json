{"ast":null,"code":"var _jsxFileName = \"/home/saadi/coursAlyra/OpiChain/client/src/pages/MarketPlace.jsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport '../css/page/marketPlace.css';\nimport useEth from \"../contexts/EthContext/useEth\";\nimport { useState, useEffect } from \"react\";\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport ImageListItemBar from '@mui/material/ImageListItemBar';\nimport Box from '@mui/material/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MarketPlace() {\n  _s();\n  const [refresh, setRefresh] = useState(false);\n  const {\n    state: {\n      web3,\n      accounts,\n      contractOPI,\n      contractOpiChainSurveyNFT,\n      contractMarketPlace\n    }\n  } = useEth();\n  const [listed, setListed] = useState([]);\n  const [surveysData, setSurveysData] = useState([]);\n  const [balance, setBalance] = useState('0');\n  useEffect(() => {\n    if (contractOPI && contractOPI !== null && contractOPI !== void 0 && contractOPI.methods) {\n      (async function () {\n        try {\n          const balance = await contractOPI.methods.balanceOf(accounts[0]).call({\n            from: accounts[0]\n          });\n          console.log(balance);\n          setBalance(balance);\n        } catch (err) {\n          console.log(err);\n        }\n      })();\n    }\n    if (contractMarketPlace && contractMarketPlace !== null && contractMarketPlace !== void 0 && contractMarketPlace.methods) {\n      (async function () {\n        let listedSurvey = await contractMarketPlace.methods.getListedSurveysNfts().call({\n          from: accounts[0]\n        });\n        let surveysDataLclExt = [];\n        for (let [index, s] of listedSurvey.entries()) {\n          let survey = await contractOpiChainSurveyNFT.methods.getSurveyById(s.id).call({\n            from: accounts[0]\n          });\n          s = {\n            ...s,\n            ...survey\n          };\n          surveysDataLclExt.push(s);\n          console.log(s);\n        }\n        setSurveysData(surveysDataLclExt);\n        //  setSurveysData(surveysDataLclExt);\n      })();\n    }\n  }, [contractMarketPlace, accounts, refresh]);\n  const buySurveyResultNft = async (_idSurvey, _price) => {\n    try {\n      await contractMarketPlace.methods.listSurveyNft(_idSurvey, parseInt(_price)).send({\n        from: accounts[0],\n        value: web3.utils.toWei('0.0001', 'ether')\n      });\n    } catch (err) {\n      console.log(err);\n    }\n    let nextR = !refresh;\n    setRefresh(nextR);\n    // navigate('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"marketPlace\",\n    children: /*#__PURE__*/_jsxDEV(ImageList, {\n      sx: {\n        width: 400,\n        height: 300\n      },\n      cols: 3,\n      gap: 8,\n      children: surveysData.map(item => /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(ImageListItem, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://gateway.pinata.cloud/ipfs/QmeTXNBq64vbUxCSvCRt8Ka5a966iEhKZNhLmGtVU5uywE/\" + item.id.toString() + \".png\",\n            alt: item.description,\n            loading: \"lazy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ImageListItemBar, {\n            title: item.description,\n            subtitle: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"by: \", item.owner]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 39\n            }, this),\n            position: \"below\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 26\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"buyContainerButt\",\n          children: [item.owner !== accounts[0] && balance != 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"butMarketNotEdit\",\n            children: \"Buy Survey Result\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 72\n          }, this), item.owner !== accounts[0] && balance == 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"userListNotEdit\",\n            children: \"Not enough Opis to buy Results!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 72\n          }, this), item.owner === accounts[0] && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"userListNotEdit\",\n            children: \"You are the seller!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(MarketPlace, \"rrjW2JF6YuxUA+Y7zA3Ogr5bGmk=\", false, function () {\n  return [useEth];\n});\n_c = MarketPlace;\nexport default MarketPlace;\nvar _c;\n$RefreshReg$(_c, \"MarketPlace\");","map":{"version":3,"names":["React","useEth","useState","useEffect","ImageList","ImageListItem","ImageListItemBar","Box","MarketPlace","refresh","setRefresh","state","web3","accounts","contractOPI","contractOpiChainSurveyNFT","contractMarketPlace","listed","setListed","surveysData","setSurveysData","balance","setBalance","methods","balanceOf","call","from","console","log","err","listedSurvey","getListedSurveysNfts","surveysDataLclExt","index","s","entries","survey","getSurveyById","id","push","buySurveyResultNft","_idSurvey","_price","listSurveyNft","parseInt","send","value","utils","toWei","nextR","width","height","map","item","toString","description","owner"],"sources":["/home/saadi/coursAlyra/OpiChain/client/src/pages/MarketPlace.jsx"],"sourcesContent":["import * as React from 'react';\nimport '../css/page/marketPlace.css';\nimport useEth from \"../contexts/EthContext/useEth\";\nimport { useState, useEffect } from \"react\";\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport ImageListItemBar from '@mui/material/ImageListItemBar';\nimport Box from '@mui/material/Box';\n\nfunction MarketPlace() {\n\n    const [refresh, setRefresh] = useState(false);\n    const { state: { web3,accounts, contractOPI , contractOpiChainSurveyNFT, contractMarketPlace } } = useEth();\n    const [listed, setListed] = useState([]);\n    const [surveysData, setSurveysData] = useState([]);\n    const [balance, setBalance] = useState('0');\n\n    useEffect(() => {\n\n\n        \n        if (contractOPI && contractOPI?.methods) {\n\n            (async function () {\n\n                try {\n                   const balance = await contractOPI.methods.balanceOf(accounts[0]).call({ from: accounts[0]} );\n                   console.log(balance);\n                   setBalance(balance);\n                } catch (err) {\n                    console.log(err);\n                }\n\n\n        })();\n\n        }\n\n\n\n        if (contractMarketPlace && contractMarketPlace?.methods) {\n            (async function () {\n\n\n                let listedSurvey = await contractMarketPlace.methods.getListedSurveysNfts().call({ from: accounts[0] });\n                let surveysDataLclExt = [];\n\n                for (let [index, s] of listedSurvey.entries()) {\n                    let survey = await contractOpiChainSurveyNFT.methods.getSurveyById(s.id).call({ from: accounts[0] });\n                    s = { ...s, ...survey };\n                    surveysDataLclExt.push(s);\n                    console.log(s);\n                }\n                setSurveysData(surveysDataLclExt);\n                //  setSurveysData(surveysDataLclExt);\n            })();\n        }\n\n    }, [contractMarketPlace, accounts, refresh]);\n\n\n\n    const buySurveyResultNft = async (_idSurvey, _price) => {\n        try {\n            await contractMarketPlace.methods.listSurveyNft(_idSurvey, parseInt(_price)).send({ from: accounts[0] , value: web3.utils.toWei('0.0001', 'ether') })       \n        } catch (err) {\n            console.log(err);\n        }\n        let nextR = !refresh;\n        setRefresh(nextR);\n        // navigate('/');\n\n    }\n\n\n\n    return (\n\n        <div className=\"marketPlace\">\n            <ImageList sx={{ width: 400, height: 300 }} cols={3} gap={8}>\n                {surveysData.map((item) => (\n                    <Box key={item.id}>\n                    <ImageListItem key={item.id} >\n                        <img\n                            src={\"https://gateway.pinata.cloud/ipfs/QmeTXNBq64vbUxCSvCRt8Ka5a966iEhKZNhLmGtVU5uywE/\" + (item.id).toString() + \".png\"} \n                           \n                            alt={item.description}\n                            loading=\"lazy\"\n                        />\n                         <ImageListItemBar\n                            title={item.description}\n                            subtitle={<span>by: {item.owner}</span>}\n                            position=\"below\"\n                        /> \n                    </ImageListItem>\n                    <div id='buyContainerButt'>\n                        \n                      {item.owner !== accounts[0]  && balance != 0 &&  <button className=\"butMarketNotEdit\">Buy Survey Result</button>}  \n                      {item.owner !== accounts[0]  &&  balance == 0 && <button className=\"userListNotEdit\">Not enough Opis to buy Results!</button>}  \n                      {item.owner === accounts[0]  &&  <button className=\"userListNotEdit\">You are the seller!</button>}  \n\n                    </div>\n                    \n                    </Box>\n                    \n                ))}\n            </ImageList>\n        </div>\n    );\n}\n\nexport default MarketPlace;"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAO,6BAA6B;AACpC,OAAOC,MAAM,MAAM,+BAA+B;AAClD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,GAAG,MAAM,mBAAmB;AAAC;AAEpC,SAASC,WAAW,GAAG;EAAA;EAEnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM;IAAES,KAAK,EAAE;MAAEC,IAAI;MAACC,QAAQ;MAAEC,WAAW;MAAGC,yBAAyB;MAAEC;IAAoB;EAAE,CAAC,GAAGf,MAAM,EAAE;EAC3G,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,GAAG,CAAC;EAE3CC,SAAS,CAAC,MAAM;IAIZ,IAAIW,WAAW,IAAIA,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAES,OAAO,EAAE;MAErC,CAAC,kBAAkB;QAEf,IAAI;UACD,MAAMF,OAAO,GAAG,MAAMP,WAAW,CAACS,OAAO,CAACC,SAAS,CAACX,QAAQ,CAAC,CAAC,CAAC,CAAC,CAACY,IAAI,CAAC;YAAEC,IAAI,EAAEb,QAAQ,CAAC,CAAC;UAAC,CAAC,CAAE;UAC5Fc,OAAO,CAACC,GAAG,CAACP,OAAO,CAAC;UACpBC,UAAU,CAACD,OAAO,CAAC;QACtB,CAAC,CAAC,OAAOQ,GAAG,EAAE;UACVF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;QACpB;MAGR,CAAC,GAAG;IAEJ;IAIA,IAAIb,mBAAmB,IAAIA,mBAAmB,aAAnBA,mBAAmB,eAAnBA,mBAAmB,CAAEO,OAAO,EAAE;MACrD,CAAC,kBAAkB;QAGf,IAAIO,YAAY,GAAG,MAAMd,mBAAmB,CAACO,OAAO,CAACQ,oBAAoB,EAAE,CAACN,IAAI,CAAC;UAAEC,IAAI,EAAEb,QAAQ,CAAC,CAAC;QAAE,CAAC,CAAC;QACvG,IAAImB,iBAAiB,GAAG,EAAE;QAE1B,KAAK,IAAI,CAACC,KAAK,EAAEC,CAAC,CAAC,IAAIJ,YAAY,CAACK,OAAO,EAAE,EAAE;UAC3C,IAAIC,MAAM,GAAG,MAAMrB,yBAAyB,CAACQ,OAAO,CAACc,aAAa,CAACH,CAAC,CAACI,EAAE,CAAC,CAACb,IAAI,CAAC;YAAEC,IAAI,EAAEb,QAAQ,CAAC,CAAC;UAAE,CAAC,CAAC;UACpGqB,CAAC,GAAG;YAAE,GAAGA,CAAC;YAAE,GAAGE;UAAO,CAAC;UACvBJ,iBAAiB,CAACO,IAAI,CAACL,CAAC,CAAC;UACzBP,OAAO,CAACC,GAAG,CAACM,CAAC,CAAC;QAClB;QACAd,cAAc,CAACY,iBAAiB,CAAC;QACjC;MACJ,CAAC,GAAG;IACR;EAEJ,CAAC,EAAE,CAAChB,mBAAmB,EAAEH,QAAQ,EAAEJ,OAAO,CAAC,CAAC;EAI5C,MAAM+B,kBAAkB,GAAG,OAAOC,SAAS,EAAEC,MAAM,KAAK;IACpD,IAAI;MACA,MAAM1B,mBAAmB,CAACO,OAAO,CAACoB,aAAa,CAACF,SAAS,EAAEG,QAAQ,CAACF,MAAM,CAAC,CAAC,CAACG,IAAI,CAAC;QAAEnB,IAAI,EAAEb,QAAQ,CAAC,CAAC,CAAC;QAAGiC,KAAK,EAAElC,IAAI,CAACmC,KAAK,CAACC,KAAK,CAAC,QAAQ,EAAE,OAAO;MAAE,CAAC,CAAC;IACzJ,CAAC,CAAC,OAAOnB,GAAG,EAAE;MACVF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;IACpB;IACA,IAAIoB,KAAK,GAAG,CAACxC,OAAO;IACpBC,UAAU,CAACuC,KAAK,CAAC;IACjB;EAEJ,CAAC;;EAID,oBAEI;IAAK,SAAS,EAAC,aAAa;IAAA,uBACxB,QAAC,SAAS;MAAC,EAAE,EAAE;QAAEC,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI,CAAE;MAAC,IAAI,EAAE,CAAE;MAAC,GAAG,EAAE,CAAE;MAAA,UACvDhC,WAAW,CAACiC,GAAG,CAAEC,IAAI,iBAClB,QAAC,GAAG;QAAA,wBACJ,QAAC,aAAa;UAAA,wBACV;YACI,GAAG,EAAE,mFAAmF,GAAIA,IAAI,CAACf,EAAE,CAAEgB,QAAQ,EAAE,GAAG,MAAO;YAEzH,GAAG,EAAED,IAAI,CAACE,WAAY;YACtB,OAAO,EAAC;UAAM;YAAA;YAAA;YAAA;UAAA,QAChB,eACD,QAAC,gBAAgB;YACd,KAAK,EAAEF,IAAI,CAACE,WAAY;YACxB,QAAQ,eAAE;cAAA,mBAAWF,IAAI,CAACG,KAAK;YAAA;cAAA;cAAA;cAAA;YAAA,QAAS;YACxC,QAAQ,EAAC;UAAO;YAAA;YAAA;YAAA;UAAA,QAClB;QAAA,GAXcH,IAAI,CAACf,EAAE;UAAA;UAAA;UAAA;QAAA,QAYX,eAChB;UAAK,EAAE,EAAC,kBAAkB;UAAA,WAEvBe,IAAI,CAACG,KAAK,KAAK3C,QAAQ,CAAC,CAAC,CAAC,IAAKQ,OAAO,IAAI,CAAC,iBAAK;YAAQ,SAAS,EAAC,kBAAkB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAA2B,EAC/GgC,IAAI,CAACG,KAAK,KAAK3C,QAAQ,CAAC,CAAC,CAAC,IAAMQ,OAAO,IAAI,CAAC,iBAAI;YAAQ,SAAS,EAAC,iBAAiB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAyC,EAC5HgC,IAAI,CAACG,KAAK,KAAK3C,QAAQ,CAAC,CAAC,CAAC,iBAAM;YAAQ,SAAS,EAAC,iBAAiB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAA6B;QAAA;UAAA;UAAA;UAAA;QAAA,QAE7F;MAAA,GApBIwC,IAAI,CAACf,EAAE;QAAA;QAAA;QAAA;MAAA,QAwBpB;IAAC;MAAA;MAAA;MAAA;IAAA;EACM;IAAA;IAAA;IAAA;EAAA,QACV;AAEd;AAAC,GApGQ9B,WAAW;EAAA,QAGmFP,MAAM;AAAA;AAAA,KAHpGO,WAAW;AAsGpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}