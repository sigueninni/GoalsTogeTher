{"ast":null,"code":"var _jsxFileName = \"/home/saadi/coursAlyra/OpiChain/client/src/contexts/EthContext/EthProvider.jsx\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useCallback, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EthProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const init = useCallback(async (artifactSBT, artifactOPI, artifactOpiDex, artifactOpiChainSurveyNFT) => {\n    if (artifactSBT) {\n      const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n      const accounts = await web3.eth.requestAccounts();\n      const networkID = await web3.eth.net.getId();\n      const {\n        abi\n      } = artifactSBT;\n      let addressSBT, contractSBT, owner, sounder, surveyed;\n      try {\n        addressSBT = artifactSBT.networks[networkID].address;\n        contractSBT = new web3.eth.Contract(abi, addressSBT);\n        owner = await contractSBT.methods.owner().call({\n          from: owner\n        });\n        sounder = await contractSBT.methods.isSounder(accounts[0]).call({\n          from: owner\n        });\n        surveyed = await contractSBT.methods.isSurveyed(accounts[0]).call({\n          from: owner\n        });\n      } catch (err) {\n        console.error(err);\n      }\n\n      //Opi\n      const abiOPI = artifactOPI.abi;\n      let addressOPI, contractOPI;\n      try {\n        addressOPI = artifactOPI.networks[networkID].address;\n        contractOPI = new web3.eth.Contract(abiOPI, addressOPI);\n      } catch (err) {\n        console.error(err);\n      }\n\n      //OpiDex\n      const abiOpiDex = artifactOpiDex.abi;\n      let addressOpiDex, contractOpiDex;\n      try {\n        addressOpiDex = artifactOpiDex.networks[networkID].address;\n        contractOpiDex = new web3.eth.Contract(abiOpiDex, addressOpiDex);\n      } catch (err) {\n        console.error(err);\n      }\n\n      //OpiChainSurveyNFT\n      const abiOpiChainSurveyNFT = artifactOpiChainSurveyNFT.abi;\n      let addressOpiChainSurveyNFT, contractOpiChainSurveyNFT;\n      try {\n        addressOpiChainSurveyNFT = artifactOpiChainSurveyNFT.networks[networkID].address;\n        contractOpiChainSurveyNFT = new web3.eth.Contract(abiOpiChainSurveyNFT, addressOpiChainSurveyNFT);\n      } catch (err) {\n        console.error(err);\n      }\n\n      //MarketPlace\n      const abiMarketPlace = artifactMarketPlace.abi;\n      let addressMarketPlace, contractMarketPlace;\n      try {\n        addressMarketPlace = artifactMarketPlace.networks[networkID].address;\n        contractMarketPlace = new web3.eth.Contract(abiMarketPlace, addressMarketPlace);\n      } catch (err) {\n        console.error(err);\n      }\n      dispatch({\n        type: actions.init,\n        data: {\n          artifactSBT,\n          artifactOPI,\n          artifactOpiDex,\n          artifactOpiChainSurveyNFT,\n          artifactMarketPlace,\n          web3,\n          accounts,\n          networkID,\n          contractSBT,\n          contractOPI,\n          contractOpiDex,\n          contractOpiChainSurveyNFT,\n          contractMarketPlace,\n          owner,\n          sounder,\n          surveyed\n        }\n      });\n    }\n  }, []);\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifactSBT = require(\"../../contracts/OpiChainSBT.json\");\n        const artifactOPI = require(\"../../contracts/Opi.json\");\n        const artifactOpiDex = require(\"../../contracts/OpiDex.json\");\n        const artifactOpiChainSurveyNFT = require(\"../../contracts/OpiChainSurveyNFT.json\");\n        init(artifactSBT, artifactOPI, artifactOpiDex, artifactOpiChainSurveyNFT);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    tryInit();\n  }, [init]);\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifactSBT, state.artifactOPI, state.artifactOpiDex, state.artifactOpiChainSurveyNFT);\n    };\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifactSBT, state.artifactOPI, state.artifactOpiDex]);\n\n  // useEffect(() => {\n  //   const events = [\"chainChanged\", \"accountsChanged\"];\n  //   const handleChange = () => {\n  //     init(state.artifactOPI);\n  //   };\n\n  //   events.forEach(e => window.ethereum.on(e, handleChange));\n  //   return () => {\n  //     events.forEach(e => window.ethereum.removeListener(e, handleChange));\n  //   };\n  // }, [init, state.artifactOPI]);\n\n  return /*#__PURE__*/_jsxDEV(EthContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(EthProvider, \"hc888FM+IczqCNE4rWyvjI+TMdU=\");\n_c = EthProvider;\nexport default EthProvider;\nvar _c;\n$RefreshReg$(_c, \"EthProvider\");","map":{"version":3,"names":["React","useReducer","useCallback","useEffect","Web3","EthContext","reducer","actions","initialState","EthProvider","children","state","dispatch","init","artifactSBT","artifactOPI","artifactOpiDex","artifactOpiChainSurveyNFT","web3","givenProvider","accounts","eth","requestAccounts","networkID","net","getId","abi","addressSBT","contractSBT","owner","sounder","surveyed","networks","address","Contract","methods","call","from","isSounder","isSurveyed","err","console","error","abiOPI","addressOPI","contractOPI","abiOpiDex","addressOpiDex","contractOpiDex","abiOpiChainSurveyNFT","addressOpiChainSurveyNFT","contractOpiChainSurveyNFT","abiMarketPlace","artifactMarketPlace","addressMarketPlace","contractMarketPlace","type","data","tryInit","require","events","handleChange","forEach","e","window","ethereum","on","removeListener"],"sources":["/home/saadi/coursAlyra/OpiChain/client/src/contexts/EthContext/EthProvider.jsx"],"sourcesContent":["import React, { useReducer, useCallback, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\n\nfunction EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const init = useCallback(\n    async (artifactSBT, artifactOPI, artifactOpiDex, artifactOpiChainSurveyNFT) => {\n      if (artifactSBT) {\n        const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n        const accounts = await web3.eth.requestAccounts();\n        const networkID = await web3.eth.net.getId();\n\n        const { abi } = artifactSBT;\n        let addressSBT, contractSBT, owner, sounder, surveyed;\n        try {\n          addressSBT = artifactSBT.networks[networkID].address;\n          contractSBT = new web3.eth.Contract(abi, addressSBT);\n          owner = await contractSBT.methods.owner().call({ from: owner });\n          sounder = await contractSBT.methods.isSounder(accounts[0]).call({ from: owner });\n          surveyed = await contractSBT.methods.isSurveyed(accounts[0]).call({ from: owner });\n        } catch (err) {\n          console.error(err);\n        }\n\n        //Opi\n        const abiOPI = artifactOPI.abi;\n        let addressOPI, contractOPI;\n        try {\n          addressOPI = artifactOPI.networks[networkID].address;\n          contractOPI = new web3.eth.Contract(abiOPI, addressOPI);\n        } catch (err) {\n          console.error(err);\n        }\n\n        //OpiDex\n        const abiOpiDex = artifactOpiDex.abi;\n        let addressOpiDex, contractOpiDex;\n        try {\n          addressOpiDex = artifactOpiDex.networks[networkID].address;\n          contractOpiDex = new web3.eth.Contract(abiOpiDex, addressOpiDex);\n        } catch (err) {\n          console.error(err);\n        }\n\n        //OpiChainSurveyNFT\n        const abiOpiChainSurveyNFT = artifactOpiChainSurveyNFT.abi;\n        let addressOpiChainSurveyNFT, contractOpiChainSurveyNFT;\n        try {\n          addressOpiChainSurveyNFT = artifactOpiChainSurveyNFT.networks[networkID].address;\n          contractOpiChainSurveyNFT = new web3.eth.Contract(abiOpiChainSurveyNFT, addressOpiChainSurveyNFT);\n        } catch (err) {\n          console.error(err);\n        }\n\n\n        //MarketPlace\n        const abiMarketPlace = artifactMarketPlace.abi;\n        let addressMarketPlace, contractMarketPlace;\n        try {\n          addressMarketPlace = artifactMarketPlace.networks[networkID].address;\n          contractMarketPlace = new web3.eth.Contract(abiMarketPlace, addressMarketPlace);\n        } catch (err) {\n          console.error(err);\n        }\n\n        dispatch({\n          type: actions.init,\n          data: {\n            artifactSBT, artifactOPI, artifactOpiDex, artifactOpiChainSurveyNFT,artifactMarketPlace,\n            web3, accounts, networkID, contractSBT, contractOPI, contractOpiDex, contractOpiChainSurveyNFT,contractMarketPlace, owner, sounder, surveyed\n          }\n        });\n      }\n\n\n    }, []);\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifactSBT = require(\"../../contracts/OpiChainSBT.json\");\n        const artifactOPI = require(\"../../contracts/Opi.json\");\n        const artifactOpiDex = require(\"../../contracts/OpiDex.json\");\n        const artifactOpiChainSurveyNFT = require(\"../../contracts/OpiChainSurveyNFT.json\");\n        \n        init(artifactSBT, artifactOPI, artifactOpiDex, artifactOpiChainSurveyNFT);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n\n\n\n\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifactSBT, state.artifactOPI, state.artifactOpiDex, state.artifactOpiChainSurveyNFT);\n    };\n\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifactSBT, state.artifactOPI, state.artifactOpiDex]);\n\n\n  // useEffect(() => {\n  //   const events = [\"chainChanged\", \"accountsChanged\"];\n  //   const handleChange = () => {\n  //     init(state.artifactOPI);\n  //   };\n\n  //   events.forEach(e => window.ethereum.on(e, handleChange));\n  //   return () => {\n  //     events.forEach(e => window.ethereum.removeListener(e, handleChange));\n  //   };\n  // }, [init, state.artifactOPI]);\n\n\n  return (\n    <EthContext.Provider value={{\n      state,\n      dispatch\n    }}>\n      {children}\n    </EthContext.Provider>\n  );\n}\n\nexport default EthProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}