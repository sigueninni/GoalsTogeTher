{"ast":null,"code":"var _jsxFileName = \"/home/saadi/coursAlyra/OpiChain/client/src/contexts/EthContext/EthProvider.jsx\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useCallback, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EthProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const init = useCallback(async (artifactSBT, artifactCHL, artifactChlDex, artifactChlChainChallengeNFT, artifactMarketPlace) => {\n    if (artifactSBT) {\n      const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n      web3.eth.handleRevert = true;\n      const accounts = await web3.eth.requestAccounts();\n      const networkID = await web3.eth.net.getId();\n      const {\n        abi\n      } = artifactSBT;\n      let addressSBT, contractSBT, owner, sounder, Challengeed;\n      try {\n        addressSBT = artifactSBT.networks[networkID].address;\n        contractSBT = new web3.eth.Contract(abi, addressSBT);\n        owner = await contractSBT.methods.owner().call({\n          from: owner\n        });\n        sounder = await contractSBT.methods.isSounder(accounts[0]).call({\n          from: owner\n        });\n        Challengeed = await contractSBT.methods.isChallengeed(accounts[0]).call({\n          from: owner\n        });\n      } catch (err) {\n        console.error(err);\n      }\n\n      //Chl\n      const abiCHL = artifactCHL.abi;\n      let addressCHL, contractCHL;\n      try {\n        addressCHL = artifactCHL.networks[networkID].address;\n        contractCHL = new web3.eth.Contract(abiCHL, addressCHL);\n      } catch (err) {\n        console.error(err);\n      }\n\n      //ChlDex\n      const abiChlDex = artifactChlDex.abi;\n      let addressChlDex, contractChlDex;\n      try {\n        addressChlDex = artifactChlDex.networks[networkID].address;\n        contractChlDex = new web3.eth.Contract(abiChlDex, addressChlDex);\n      } catch (err) {\n        console.error(err);\n      }\n\n      //ChlChainChallengeNFT\n      const abiChlChainChallengeNFT = artifactChlChainChallengeNFT.abi;\n      let addressChlChainChallengeNFT, contractChlChainChallengeNFT;\n      try {\n        addressChlChainChallengeNFT = artifactChlChainChallengeNFT.networks[networkID].address;\n        contractChlChainChallengeNFT = new web3.eth.Contract(abiChlChainChallengeNFT, addressChlChainChallengeNFT);\n      } catch (err) {\n        console.error(err);\n      }\n\n      //ChlMarketPlace\n      const abiMarketPlace = artifactMarketPlace.abi;\n      let addressMarketPlace, contractMarketPlace;\n      try {\n        addressMarketPlace = artifactMarketPlace.networks[networkID].address;\n        contractMarketPlace = new web3.eth.Contract(abiMarketPlace, addressMarketPlace);\n      } catch (err) {\n        console.error(err);\n      }\n      dispatch({\n        type: actions.init,\n        data: {\n          artifactSBT,\n          artifactCHL,\n          artifactChlDex,\n          artifactChlChainChallengeNFT,\n          artifactMarketPlace,\n          web3,\n          accounts,\n          networkID,\n          contractSBT,\n          contractCHL,\n          contractChlDex,\n          contractChlChainChallengeNFT,\n          contractMarketPlace,\n          owner,\n          sounder,\n          Challengeed\n        }\n      });\n    }\n  }, []);\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifactSBT = require(\"../../contracts/ChlChainSBT.json\");\n        const artifactCHL = require(\"../../contracts/Chl.json\");\n        const artifactChlDex = require(\"../../contracts/ChlDex.json\");\n        const artifactChlChainChallengeNFT = require(\"../../contracts/ChlChainChallengeNFT.json\");\n        const artifactMarketPlace = require(\"../../contracts/ChlChallengesMarketPlace.json\");\n        init(artifactSBT, artifactCHL, artifactChlDex, artifactChlChainChallengeNFT, artifactMarketPlace);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    tryInit();\n  }, [init]);\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifactSBT, state.artifactCHL, state.artifactChlDex, state.artifactChlChainChallengeNFT, state.artifactMarketPlace);\n    };\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifactSBT, state.artifactCHL, state.artifactChlDex, state.artifactChlChainChallengeNFT, state.artifactMarketPlace]);\n\n  // useEffect(() => {\n  //   const events = [\"chainChanged\", \"accountsChanged\"];\n  //   const handleChange = () => {\n  //     init(state.artifactCHL);\n  //   };\n\n  //   events.forEach(e => window.ethereum.on(e, handleChange));\n  //   return () => {\n  //     events.forEach(e => window.ethereum.removeListener(e, handleChange));\n  //   };\n  // }, [init, state.artifactCHL]);\n\n  return /*#__PURE__*/_jsxDEV(EthContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(EthProvider, \"hc888FM+IczqCNE4rWyvjI+TMdU=\");\n_c = EthProvider;\nexport default EthProvider;\nvar _c;\n$RefreshReg$(_c, \"EthProvider\");","map":{"version":3,"names":["React","useReducer","useCallback","useEffect","Web3","EthContext","reducer","actions","initialState","EthProvider","children","state","dispatch","init","artifactSBT","artifactCHL","artifactChlDex","artifactChlChainChallengeNFT","artifactMarketPlace","web3","givenProvider","eth","handleRevert","accounts","requestAccounts","networkID","net","getId","abi","addressSBT","contractSBT","owner","sounder","Challengeed","networks","address","Contract","methods","call","from","isSounder","isChallengeed","err","console","error","abiCHL","addressCHL","contractCHL","abiChlDex","addressChlDex","contractChlDex","abiChlChainChallengeNFT","addressChlChainChallengeNFT","contractChlChainChallengeNFT","abiMarketPlace","addressMarketPlace","contractMarketPlace","type","data","tryInit","require","events","handleChange","forEach","e","window","ethereum","on","removeListener"],"sources":["/home/saadi/coursAlyra/OpiChain/client/src/contexts/EthContext/EthProvider.jsx"],"sourcesContent":["import React, { useReducer, useCallback, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\n\nfunction EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const init = useCallback(\n    async (artifactSBT, artifactCHL, artifactChlDex, artifactChlChainChallengeNFT,artifactMarketPlace) => {\n      if (artifactSBT) {\n        const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n        web3.eth.handleRevert = true;\n        const accounts = await web3.eth.requestAccounts();\n        const networkID = await web3.eth.net.getId();\n\n        const { abi } = artifactSBT;\n        let addressSBT, contractSBT, owner, sounder, Challengeed;\n        try {\n          addressSBT = artifactSBT.networks[networkID].address;\n          contractSBT = new web3.eth.Contract(abi, addressSBT);\n          owner = await contractSBT.methods.owner().call({ from: owner });\n          sounder = await contractSBT.methods.isSounder(accounts[0]).call({ from: owner });\n          Challengeed = await contractSBT.methods.isChallengeed(accounts[0]).call({ from: owner });\n        } catch (err) {\n          console.error(err);\n        }\n\n        //Chl\n        const abiCHL = artifactCHL.abi;\n        let addressCHL, contractCHL;\n        try {\n          addressCHL = artifactCHL.networks[networkID].address;\n          contractCHL = new web3.eth.Contract(abiCHL, addressCHL);\n        } catch (err) {\n          console.error(err);\n        }\n\n        //ChlDex\n        const abiChlDex = artifactChlDex.abi;\n        let addressChlDex, contractChlDex;\n        try {\n          addressChlDex = artifactChlDex.networks[networkID].address;\n          contractChlDex = new web3.eth.Contract(abiChlDex, addressChlDex);\n        } catch (err) {\n          console.error(err);\n        }\n\n        //ChlChainChallengeNFT\n        const abiChlChainChallengeNFT = artifactChlChainChallengeNFT.abi;\n        let addressChlChainChallengeNFT, contractChlChainChallengeNFT;\n        try {\n          addressChlChainChallengeNFT = artifactChlChainChallengeNFT.networks[networkID].address;\n          contractChlChainChallengeNFT = new web3.eth.Contract(abiChlChainChallengeNFT, addressChlChainChallengeNFT);\n        } catch (err) {\n          console.error(err);\n        }\n\n\n        //ChlMarketPlace\n        const abiMarketPlace = artifactMarketPlace.abi;\n        let addressMarketPlace, contractMarketPlace;\n        try {\n          addressMarketPlace = artifactMarketPlace.networks[networkID].address;\n          contractMarketPlace = new web3.eth.Contract(abiMarketPlace, addressMarketPlace);\n        } catch (err) {\n          console.error(err);\n        }\n\n        dispatch({\n          type: actions.init,\n          data: {\n            artifactSBT, artifactCHL, artifactChlDex, artifactChlChainChallengeNFT,artifactMarketPlace,\n            web3, accounts, networkID, contractSBT, contractCHL, contractChlDex, contractChlChainChallengeNFT,contractMarketPlace, owner, sounder, Challengeed\n          }\n        });\n      }\n\n\n    }, []);\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifactSBT = require(\"../../contracts/ChlChainSBT.json\");\n        const artifactCHL = require(\"../../contracts/Chl.json\");\n        const artifactChlDex = require(\"../../contracts/ChlDex.json\");\n        const artifactChlChainChallengeNFT = require(\"../../contracts/ChlChainChallengeNFT.json\");\n        const artifactMarketPlace =  require(\"../../contracts/ChlChallengesMarketPlace.json\");\n        init(artifactSBT, artifactCHL, artifactChlDex, artifactChlChainChallengeNFT,artifactMarketPlace);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n\n\n\n\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifactSBT, state.artifactCHL, state.artifactChlDex, state.artifactChlChainChallengeNFT,state.artifactMarketPlace);\n    };\n\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifactSBT, state.artifactCHL, state.artifactChlDex, state.artifactChlChainChallengeNFT,state.artifactMarketPlace]);\n\n\n  // useEffect(() => {\n  //   const events = [\"chainChanged\", \"accountsChanged\"];\n  //   const handleChange = () => {\n  //     init(state.artifactCHL);\n  //   };\n\n  //   events.forEach(e => window.ethereum.on(e, handleChange));\n  //   return () => {\n  //     events.forEach(e => window.ethereum.removeListener(e, handleChange));\n  //   };\n  // }, [init, state.artifactCHL]);\n\n\n  return (\n    <EthContext.Provider value={{\n      state,\n      dispatch\n    }}>\n      {children}\n    </EthContext.Provider>\n  );\n}\n\nexport default EthProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}