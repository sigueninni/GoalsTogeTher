{"ast":null,"code":"var _jsxFileName = \"/home/saadi/coursAlyra/OpiChain/client/src/pages/MarketPlace.jsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport '../css/page/marketPlace.css';\nimport useEth from \"../contexts/EthContext/useEth\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MarketPlace() {\n  _s();\n  const [refresh, setRefresh] = useState(false);\n  const {\n    state: {\n      accounts,\n      contractMarketPlace\n    }\n  } = useEth();\n  const [listed, setListed] = useState([]);\n  useEffect(() => {\n    if (contractMarketPlace && contractMarketPlace !== null && contractMarketPlace !== void 0 && contractMarketPlace.methods) {\n      (async function () {\n        let listedSurvey = await contractMarketPlace.methods.getListedSurveysNfts().call({\n          from: accounts[0]\n        });\n        for (let [index, s] of surveysDataLcl.entries()) {\n          let survey = await contractOpiChainSurveyNFT.methods.getSurveyById(s._idSurvey).call({\n            from: accounts[0]\n          });\n          s = {\n            ...s,\n            ...survey\n          };\n          surveysDataLclExt.push(s);\n          console.log(s);\n        }\n        setSurveysData(surveysDataLclExt);\n\n        //  setSurveysData(surveysDataLclExt);\n      })();\n    }\n  }, [contractMarketPlace, accounts, refresh]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"marketPlace\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(MarketPlace, \"YyL6WucusL8hoOqu7Co210e+CQ8=\", false, function () {\n  return [useEth];\n});\n_c = MarketPlace;\nexport default MarketPlace;\nvar _c;\n$RefreshReg$(_c, \"MarketPlace\");","map":{"version":3,"names":["React","useEth","useState","useEffect","MarketPlace","refresh","setRefresh","state","accounts","contractMarketPlace","listed","setListed","methods","listedSurvey","getListedSurveysNfts","call","from","index","s","surveysDataLcl","entries","survey","contractOpiChainSurveyNFT","getSurveyById","_idSurvey","surveysDataLclExt","push","console","log","setSurveysData"],"sources":["/home/saadi/coursAlyra/OpiChain/client/src/pages/MarketPlace.jsx"],"sourcesContent":["import * as React from 'react';\nimport '../css/page/marketPlace.css';\nimport useEth from \"../contexts/EthContext/useEth\";\nimport { useState, useEffect } from \"react\";\n\n\nfunction MarketPlace() {\n\n   const [refresh, setRefresh] = useState(false);\n    const { state: {  accounts,  contractMarketPlace } } = useEth();\n    const [listed, setListed] = useState([]);\n              \n    useEffect(() => {\n\n        if (contractMarketPlace && contractMarketPlace?.methods) {\n            (async function () {\n\n              \n            let listedSurvey = await contractMarketPlace.methods.getListedSurveysNfts().call({ from: accounts[0] });\n            \n            for (let [index, s] of surveysDataLcl.entries()) {\n                let survey = await contractOpiChainSurveyNFT.methods.getSurveyById(s._idSurvey).call({ from: accounts[0] });\n                s = { ...s, ...survey };\n                surveysDataLclExt.push(s);\n                console.log(s);\n            }\n            setSurveysData(surveysDataLclExt);\n\n\n              //  setSurveysData(surveysDataLclExt);\n            })();\n        }\n\n    }, [contractMarketPlace, accounts, refresh]);\n\n    return (\n        \n        <div className=\"marketPlace\">\n  \n        </div>\n    );\n}\n\nexport default MarketPlace;"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAO,6BAA6B;AACpC,OAAOC,MAAM,MAAM,+BAA+B;AAClD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAG5C,SAASC,WAAW,GAAG;EAAA;EAEpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAC5C,MAAM;IAAEK,KAAK,EAAE;MAAGC,QAAQ;MAAGC;IAAoB;EAAE,CAAC,GAAGR,MAAM,EAAE;EAC/D,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IAEZ,IAAIM,mBAAmB,IAAIA,mBAAmB,aAAnBA,mBAAmB,eAAnBA,mBAAmB,CAAEG,OAAO,EAAE;MACrD,CAAC,kBAAkB;QAGnB,IAAIC,YAAY,GAAG,MAAMJ,mBAAmB,CAACG,OAAO,CAACE,oBAAoB,EAAE,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAER,QAAQ,CAAC,CAAC;QAAE,CAAC,CAAC;QAEvG,KAAK,IAAI,CAACS,KAAK,EAAEC,CAAC,CAAC,IAAIC,cAAc,CAACC,OAAO,EAAE,EAAE;UAC7C,IAAIC,MAAM,GAAG,MAAMC,yBAAyB,CAACV,OAAO,CAACW,aAAa,CAACL,CAAC,CAACM,SAAS,CAAC,CAACT,IAAI,CAAC;YAAEC,IAAI,EAAER,QAAQ,CAAC,CAAC;UAAE,CAAC,CAAC;UAC3GU,CAAC,GAAG;YAAE,GAAGA,CAAC;YAAE,GAAGG;UAAO,CAAC;UACvBI,iBAAiB,CAACC,IAAI,CAACR,CAAC,CAAC;UACzBS,OAAO,CAACC,GAAG,CAACV,CAAC,CAAC;QAClB;QACAW,cAAc,CAACJ,iBAAiB,CAAC;;QAG/B;MACF,CAAC,GAAG;IACR;EAEJ,CAAC,EAAE,CAAChB,mBAAmB,EAAED,QAAQ,EAAEH,OAAO,CAAC,CAAC;EAE5C,oBAEI;IAAK,SAAS,EAAC;EAAa;IAAA;IAAA;IAAA;EAAA,QAEtB;AAEd;AAAC,GAnCQD,WAAW;EAAA,QAGuCH,MAAM;AAAA;AAAA,KAHxDG,WAAW;AAqCpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}